{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar tbody = document.querySelector(\"table tbody\");\nvar headers = document.querySelectorAll(\"th\");\nvar lastSortedColumnIndex = null;\nvar currentSortDirection = \"asc\";\nfunction sortByColumn(colIndex, direction) {\n    var tRows = Array.from(tbody.querySelectorAll(\"tr\"));\n    tRows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[colIndex].textContent.trim();\n        var cellB = rowB.cells[colIndex].textContent.trim();\n        if (direction === \"asc\") return cellA.localeCompare(cellB, undefined, {\n            numeric: true\n        });\n        else return cellB.localeCompare(cellA, undefined, {\n            numeric: true\n        });\n    });\n    tRows.forEach(function(row) {\n        return tbody.append(row);\n    });\n}\nheaders.forEach(function(header, colIndex) {\n    header.addEventListener(\"click\", function() {\n        if (lastSortedColumnIndex === colIndex) currentSortDirection = currentSortDirection === \"asc\" ? \"desc\" : \"asc\";\n        else currentSortDirection = \"asc\";\n        lastSortedColumnIndex = colIndex;\n        sortByColumn(colIndex, currentSortDirection);\n    });\n});\ntbody.addEventListener(\"click\", function(e) {\n    var clickedRow = e.target.closest(\"tr\");\n    if (clickedRow) {\n        tbody.querySelectorAll(\"tr\").forEach(function(row) {\n            return row.classList.remove(\"active\");\n        });\n        clickedRow.classList.add(\"active\");\n    }\n});\nvar form = document.createElement(\"form\");\nform.className = \"new-employee-form\";\nform.innerHTML = '\\n  <label>\\n    Name:\\n    <input name=\"name\" type=\"text\" data-qa=\"name\" required>\\n  </label>\\n  <label>\\n    Position:\\n    <input name=\"position\" type=\"text\" data-qa=\"position\">\\n  </label>\\n  <label>\\n    Office:\\n    <select name=\"office\" data-qa=\"office\" required>\\n      <option value=\"Tokyo\">Tokyo</option>\\n      <option value=\"Singapore\">Singapore</option>\\n      <option value=\"London\">London</option>\\n      <option value=\"New York\">New York</option>\\n      <option value=\"Edinburgh\">Edinburgh</option>\\n      <option value=\"San Francisco\">San Francisco</option>\\n    </select>\\n  </label>\\n  <label>\\n    Age:\\n    <input name=\"age\" type=\"number\" data-qa=\"age\" required>\\n  </label>\\n  <label>\\n    Salary:\\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\\n  </label>\\n  <button type=\"submit\" data-qa=\"save-button\">Save to table</button>\\n';\ndocument.body.appendChild(form);\nform.addEventListener(\"submit\", function(_event) {\n    _event.preventDefault();\n    var newName = form.name.value.trim();\n    var position = form.position.value.trim();\n    var office = form.office.value;\n    var age = parseInt(form.age.value.trim(), 10);\n    var salary = parseFloat(form.salary.value.trim());\n    if (newName.length < 4) {\n        notificationToShow(\"Name must have at least 4 letters.\", \"error\");\n        return;\n    }\n    if (position.length === 0) {\n        notificationToShow(\"Position must have at least one letter.\", \"error\");\n        return;\n    }\n    if (age < 18 || age > 90) {\n        notificationToShow(\"Age must be between 18 and 90.\", \"error\");\n        return;\n    }\n    if (isNaN(salary) || salary <= 0) {\n        notificationToShow(\"Salary must be a valid positive number.\", \"error\");\n        return;\n    }\n    var newRow = document.createElement(\"tr\");\n    newRow.innerHTML = \"\\n    <td>\".concat(newName, \"</td>\\n    <td>\").concat(position, \"</td>\\n    <td>\").concat(office, \"</td>\\n    <td>\").concat(age, \"</td>\\n    <td>$\").concat(salary.toLocaleString(\"en-US\").replace(/,/g, \",\"), \"</td>\\n  \");\n    table.querySelector(\"tbody\").appendChild(newRow);\n    notificationToShow(\"Employee added successfully.\", \"success\");\n    form.reset();\n});\nfunction notificationToShow(message, type) {\n    var notification = document.createElement(\"div\");\n    notification.className = \"notification \".concat(type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 3000);\n}\ntable.querySelectorAll(\"tbody td\").forEach(function(cell) {\n    cell.addEventListener(\"dblclick\", function() {\n        var initialValue = cell.innerText;\n        var input = document.createElement(\"input\");\n        input.className = \"cell-input\";\n        input.value = initialValue;\n        cell.innerText = \"\";\n        cell.appendChild(input);\n        input.focus();\n        input.addEventListener(\"blur\", function() {\n            cell.innerText = input.value.trim() || initialValue;\n        });\n        input.addEventListener(\"keypress\", function(e) {\n            if (e.key === \"Enter\") cell.innerText = input.value.trim() || initialValue;\n        });\n    });\n});\n\n//# sourceMappingURL=index.9b463ab1.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = document.querySelector('table tbody');\nconst headers = document.querySelectorAll('th');\n\nlet lastSortedColumnIndex = null;\nlet currentSortDirection = 'asc';\n\nfunction sortByColumn(colIndex, direction) {\n  const tRows = Array.from(tbody.querySelectorAll('tr'));\n\n  tRows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[colIndex].textContent.trim();\n    const cellB = rowB.cells[colIndex].textContent.trim();\n\n    if (direction === 'asc') {\n      return cellA.localeCompare(cellB, undefined, { numeric: true });\n    } else {\n      return cellB.localeCompare(cellA, undefined, { numeric: true });\n    }\n  });\n\n  tRows.forEach((row) => tbody.append(row));\n}\n\nheaders.forEach((header, colIndex) => {\n  header.addEventListener('click', () => {\n    if (lastSortedColumnIndex === colIndex) {\n      currentSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      currentSortDirection = 'asc';\n    }\n\n    lastSortedColumnIndex = colIndex;\n\n    sortByColumn(colIndex, currentSortDirection);\n  });\n});\n\ntbody.addEventListener('click', (e) => {\n  const clickedRow = e.target.closest('tr');\n\n  if (clickedRow) {\n    tbody\n      .querySelectorAll('tr')\n      .forEach((row) => row.classList.remove('active'));\n\n    clickedRow.classList.add('active');\n  }\n});\n\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nform.innerHTML = `\n  <label>\n    Name:\n    <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n  </label>\n  <label>\n    Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\">\n  </label>\n  <label>\n    Office:\n    <select name=\"office\" data-qa=\"office\" required>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>\n    Age:\n    <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n  </label>\n  <label>\n    Salary:\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n  </label>\n  <button type=\"submit\" data-qa=\"save-button\">Save to table</button>\n`;\n\ndocument.body.appendChild(form);\n\nform.addEventListener('submit', (_event) => {\n  _event.preventDefault();\n\n  const newName = form.name.value.trim();\n  const position = form.position.value.trim();\n  const office = form.office.value;\n  const age = parseInt(form.age.value.trim(), 10);\n  const salary = parseFloat(form.salary.value.trim());\n\n  if (newName.length < 4) {\n    notificationToShow('Name must have at least 4 letters.', 'error');\n\n    return;\n  }\n\n  if (position.length === 0) {\n    notificationToShow('Position must have at least one letter.', 'error');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    notificationToShow('Age must be between 18 and 90.', 'error');\n\n    return;\n  }\n\n  if (isNaN(salary) || salary <= 0) {\n    notificationToShow('Salary must be a valid positive number.', 'error');\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${newName}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${salary.toLocaleString('en-US').replace(/,/g, ',')}</td>\n  `;\n\n  table.querySelector('tbody').appendChild(newRow);\n\n  notificationToShow('Employee added successfully.', 'success');\n\n  form.reset();\n});\n\nfunction notificationToShow(message, type) {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.textContent = message;\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n}\n\ntable.querySelectorAll('tbody td').forEach((cell) => {\n  cell.addEventListener('dblclick', () => {\n    const initialValue = cell.innerText;\n    const input = document.createElement('input');\n\n    input.className = 'cell-input';\n    input.value = initialValue;\n    cell.innerText = '';\n    cell.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      cell.innerText = input.value.trim() || initialValue;\n    });\n\n    input.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        cell.innerText = input.value.trim() || initialValue;\n      }\n    });\n  });\n});\n"],"names":["table","document","querySelector","tbody","headers","querySelectorAll","lastSortedColumnIndex","currentSortDirection","forEach","header","colIndex","addEventListener","direction","tRows","Array","from","sort","rowA","rowB","cellA","cells","textContent","trim","cellB","localeCompare","undefined","numeric","row","append","e","clickedRow","target","closest","classList","remove","add","form","createElement","notificationToShow","message","type","notification","className","concat","setAttribute","body","appendChild","setTimeout","innerHTML","_event","preventDefault","newName","name","value","position","office","age","parseInt","salary","parseFloat","length","isNaN","newRow","toLocaleString","replace","reset","cell","initialValue","innerText","input","focus","key"],"version":3,"file":"index.9b463ab1.js.map"}